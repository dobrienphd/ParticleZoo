#pragma once

#include <string>
#include <unordered_map>

namespace ParticleZoo
{

    static const std::unordered_map<int, std::string> PDGtoGeant4NameLookupTable = {
        {1, "d_quark"},
        {2, "u_quark"},
        {3, "s_quark"},
        {4, "c_quark"},
        {5, "b_quark"},
        {6, "t_quark"},
        {-1, "anti_d_quark"},
        {-2, "anti_u_quark"},
        {-3, "anti_s_quark"},
        {-4, "anti_c_quark"},
        {-5, "anti_b_quark"},
        {-6, "anti_t_quark"},
        {11, "e-"},
        {-11, "e+"},
        {12, "nu_e"},
        {-12, "anti_nu_e"},
        {13, "mu-"},
        {-13, "mu+"},
        {14, "nu_mu"},
        {-14, "anti_nu_mu"},
        {15, "tau-"},
        {-15, "tau+"},
        {16, "nu_tau"},
        {-16, "anti_nu_tau"},
        {21, "gluon"},
        {22, "gamma"},
        {1103, "dd1_diquark"},
        {-1103, "anti_dd1_diquark"},
        {2101, "ud0_diquark"},
        {-2101, "anti_ud0_diquark"},
        {2103, "ud1_diquark"},
        {-2103, "anti_ud1_diquark"},
        {2203, "uu1_diquark"},
        {-2203, "anti_uu1_diquark"},
        {3101, "sd0_diquark"},
        {-3101, "anti_sd0_diquark"},
        {3103, "sd1_diquark"},
        {-3103, "anti_sd1_diquark"},
        {3201, "su0_diquark"},
        {-3201, "anti_su0_diquark"},
        {3203, "su1_diquark"},
        {-3203, "anti_su1_diquark"},
        {3303, "ss1_diquark"},
        {-3303, "anti_ss1_diquark"},
        {4101, "cd0_diquark"},
        {-4101, "anti_cd0_diquark"},
        {4103, "cd1_diquark"},
        {-4103, "anti_cd1_diquark"},
        {4201, "cu0_diquark"},
        {-4201, "anti_cu0_diquark"},
        {4203, "cu1_diquark"},
        {-4203, "anti_cu1_diquark"},
        {4301, "cs0_diquark"},
        {-4301, "anti_cs0_diquark"},
        {4303, "cs1_diquark"},
        {-4303, "anti_cs1_diquark"},
        {4403, "cc1_diquark"},
        {-4403, "anti_cc1_diquark"},
        {5101, "bd0_diquark"},
        {-5101, "anti_bd0_diquark"},
        {5103, "bd1_diquark"},
        {-5103, "anti_bd1_diquark"},
        {5201, "bu0_diquark"},
        {-5201, "anti_bu0_diquark"},
        {5203, "bu1_diquark"},
        {-5203, "anti_bu1_diquark"},
        {5301, "bs0_diquark"},
        {-5301, "anti_bs0_diquark"},
        {5303, "bs1_diquark"},
        {-5303, "anti_bs1_diquark"},
        {5401, "bc0_diquark"},
        {-5401, "anti_bc0_diquark"},
        {5403, "bc1_diquark"},
        {-5403, "anti_bc1_diquark"},
        {5503, "bb1_diquark"},
        {-5503, "anti_bb1_diquark"},
        {111, "pi0"},
        {211, "pi+"},
        {-211, "pi-"},
        {9000111, "a0(980)0"},
        {9000211, "a0(980)+"},
        {-9000211, "a0(980)-"},
        {100111, "pi(1300)0"},
        {100211, "pi(1300)+"},
        {-100211, "pi(1300)-"},
        {10111, "a0(1450)0"},
        {10211, "a0(1450)+"},
        {-10211, "a0(1450)-"},
        {113, "rho0"},
        {213, "rho+"},
        {-213, "rho-"},
        {10113, "b1(1235)0"},
        {10213, "b1(1235)+"},
        {-10213, "b1(1235)-"},
        {20113, "a1(1260)0"},
        {20213, "a1(1260)+"},
        {-20213, "a1(1260)-"},
        {100113, "rho(1450)0"},
        {100213, "rho(1450)+"},
        {-100213, "rho(1450)-"},
        {30113, "rho(1700)0"},
        {30213, "rho(1700)+"},
        {-30213, "rho(1700)-"},
        {115, "a2(1320)0"},
        {215, "a2(1320)+"},
        {-215, "a2(1320)-"},
        {10115, "pi2(1670)0"},
        {10215, "pi2(1670)+"},
        {-10215, "pi2(1670)-"},
        {117, "rho3(1690)0"},
        {217, "rho3(1690)+"},
        {-217, "rho3(1690)-"},
        {221, "eta"},
        {331, "eta_prime"},
        {9000221, "f0(500)"},
        {9010221, "f0(980)"},
        {100221, "eta(1295)"},
        {9020221, "eta(1405)"},
        {100331, "eta(1475)"},
        {9030221, "f0(1500)"},
        {10331, "f0(1710)"},
        {223, "omega"},
        {333, "phi"},
        {10223, "h1(1170)"},
        {20223, "f1(1285)"},
        {10333, "h1(1380)"},
        {20333, "f1(1420)"},
        {100223, "omega(1420)"},
        {30223, "omega(1650)"},
        {100333, "phi(1680)"},
        {225, "f2(1270)"},
        {335, "f2_prime(1525)"},
        {10225, "eta2(1645)"},
        {9030225, "f2(1810)"},
        {10335, "eta2(1870)"},
        {9060225, "f2(2010)"},
        {227, "omega3(1670)"},
        {337, "phi3(1850)"},
        {2212, "proton"},
        {-2212, "anti_proton"},
        {2112, "neutron"},
        {-2112, "anti_neutron"},
        {2224, "delta++"},
        {-2224, "anti_delta++"},
        {2214, "delta+"},
        {-2214, "anti_delta+"},
        {2114, "delta0"},
        {-2114, "anti_delta0"},
        {1114, "delta-"},
        {-1114, "anti_delta-"},
        {3122, "lambda"},
        {-3122, "anti_lambda"},
        {3222, "sigma+"},
        {-3222, "anti_sigma+"},
        {3212, "sigma0"},
        {-3212, "anti_sigma0"},
        {3112, "sigma-"},
        {-3112, "anti_sigma-"},
        {3224, "sigma(1385)+"},
        {-3224, "anti_sigma(1385)+"},
        {3214, "sigma(1385)0"},
        {-3214, "anti_sigma(1385)0"},
        {3114, "sigma(1385)-"},
        {-3114, "anti_sigma(1385)-"},
        {3322, "xi0"},
        {-3322, "anti_xi0"},
        {3312, "xi-"},
        {-3312, "anti_xi-"},
        {3324, "xi(1530)0"},
        {-3324, "anti_xi(1530)0"},
        {3314, "xi(1530)-"},
        {-3314, "anti_xi(1530)-"},
        {3334, "omega-"},
        {-3334, "anti_omega-"},
        {4122, "lambda_c+"},
        {-4122, "anti_lambda_c+"},
        {4222, "sigma_c++"},
        {-4222, "anti_sigma_c++"},
        {4212, "sigma_c+"},
        {-4212, "anti_sigma_c+"},
        {4112, "sigma_c0"},
        {-4112, "anti_sigma_c0"},
        {4232, "xi_c+"},
        {-4232, "anti_xi_c+"},
        {4132, "xi_c0"},
        {-4132, "anti_xi_c0"},
        {4332, "omega_c0"},
        {-4332, "anti_omega_c0"},
        {5122, "lambda_b"},
        {-5122, "anti_lambda_b"},
        {5212, "sigma_b0"},
        {-5212, "anti_sigma_b0"},
        {5222, "sigma_b+"},
        {-5222, "anti_sigma_b+"},
        {5112, "sigma_b-"},
        {-5112, "anti_sigma_b-"},
        {5132, "xi_b-"},
        {-5132, "anti_xi_b-"},
        {5232, "xi_b0"},
        {-5232, "anti_xi_b0"},
        {5332, "omega_b-"},
        {-5332, "anti_omega_b-"},
        {130, "kaon0L"},
        {310, "kaon0S"},
        {311, "kaon0"},
        {-311, "anti_kaon0"},
        {321, "kaon+"},
        {-321, "kaon-"},
        {10311, "k0_star(1430)0"},
        {-10311, "anti_k0_star(1430)0"},
        {10321, "k0_star(1430)+"},
        {-10321, "k0_star(1430)-"},
        {100311, "k(1460)0"},
        {-100311, "anti_k(1460)0"},
        {100321, "k(1460)+"},
        {-100321, "k(1460)-"},
        {313, "k_star0"},
        {-313, "anti_k_star0"},
        {323, "k_star+"},
        {-323, "k_star-"},
        {10313, "k1(1270)0"},
        {-10313, "anti_k1(1270)0"},
        {10323, "k1(1270)+"},
        {-10323, "k1(1270)-"},
        {20313, "k1(1400)0"},
        {-20313, "anti_k1(1400)0"},
        {20323, "k1(1400)+"},
        {-20323, "k1(1400)-"},
        {100313, "k_star(1410)0"},
        {-100313, "anti_k_star(1410)0"},
        {100323, "k_star(1410)+"},
        {-100323, "k_star(1410)-"},
        {30313, "k_star(1680)0"},
        {-30313, "anti_k_star(1680)0"},
        {30323, "k_star(1680)+"},
        {-30323, "k_star(1680)-"},
        {315, "k2_star(1430)0"},
        {-315, "anti_k2_star(1430)0"},
        {325, "k2_star(1430)+"},
        {-325, "k2_star(1430)-"},
        {10315, "k2(1770)0"},
        {-10315, "anti_k2(1770)0"},
        {10325, "k2(1770)+"},
        {-10325, "k2(1770)-"},
        {317, "k3_star(1780)0"},
        {-317, "anti_k3_star(1780)0"},
        {327, "k3_star(1780)+"},
        {-327, "k3_star(1780)-"},
        {411, "D+"},
        {-411, "D-"},
        {421, "D0"},
        {-421, "anti_D0"},
        {431, "Ds+"},
        {-431, "Ds-"},
        {511, "B0"},
        {-511, "anti_B0"},
        {521, "B+"},
        {-521, "B-"},
        {531, "Bs0"},
        {-531, "anti_Bs0"},
        {541, "Bc+"},
        {-541, "Bc-"},
        {441, "etac"},
        {443, "J/psi"},
        {553, "Upsilon"},
        {1000020040, "alpha"},
        {-1000020040, "anti_alpha"},
    };

    // Build reverse map at static init
    static const std::unordered_map<std::string, ParticleType> Geant4NameToParticleTypeLookupTable = []() {
        std::unordered_map<std::string, ParticleType> particleTypeMap;
        particleTypeMap.reserve(PDGtoGeant4NameLookupTable.size());
        for (auto const &p : PDGtoGeant4NameLookupTable) {
            int pdgCode = p.first;
            ParticleType type = getParticleTypeFromPDGID(pdgCode);
            particleTypeMap.emplace(p.second, type);
        }
        return particleTypeMap;
    }();

}